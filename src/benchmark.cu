#include <chrono>
#include <iostream>
#include <iomanip>

#include "cuda_helper.hpp"
#include "benchmark.hpp"
#include "renderer.hpp"
#include "mandelbrot.hpp"

constexpr int WIDTH = 800;
constexpr int HEIGHT = 600;

using Clock = std::chrono::high_resolution_clock;
using Time = std::chrono::time_point<Clock>;

void benchmarkLocation(const char *name, const char *centerX, const char *centerY, const char *scale, int iters, int repeat) {
    Renderer<Mandelbrot> view;
    view.width = WIDTH;
    view.height = HEIGHT;

    view.maxIters = iters;
    view.setScale(BigFloat(scale));
    view.center.x = BigFloat(centerX);
    view.center.y = BigFloat(centerY);

    CudaArray<Color> image(WIDTH*HEIGHT);

    Time start = Clock::now();

    for (int i = 0; i < repeat; i++) {
        view.render(image.data());
        gpuErrchk(cudaDeviceSynchronize());
    }

    Time finish = Clock::now();
    double time = std::chrono::duration_cast<std::chrono::milliseconds>(finish - start).count();
    time /= repeat;

    std::cout << std::setfill(' ') << std::setw(25) << name << "  ";
    std::cout << std::fixed << std::setprecision(3) << time << "ms" << std::endl;
}

void runBenchmarks() {
    benchmarkLocation("default", "-0.7", "0", "1.5", 250, 20);
    benchmarkLocation("default-high-iters", "-0.7", "0", "1.5", 5000, 20);

    benchmarkLocation(
        "e-103",
        "-0.00608110996414361738609067953992572361899653523214435533970021571665715422246314237437352765062921732023885",
        "0.80710509130889151108972120096753442734230451562765569259191208053695855881108570059709735793308459433434174",
        "6.23362e-103", 15000, 20
    );

    benchmarkLocation(
        "mosaic",
        "0.372137738770323258373356630885867793129508737859268",
        "-0.090398245434178161692952411151009819302665482561413",
        "3.47252e-47", 20000, 20
    );

    benchmarkLocation(
        "hard",
        "-1.47994622332507888020258065344256383359082887482853327232891946750450142804155145810212315771521365103554594354207816734895388578734190261250998672",
        "0.00090139732902035398019779186619717356625156681804510241106763038648869228718904914562158443602693421876352757729063180945479661811076742458032279",
        "6e-141", 45000, 20
    );

    benchmarkLocation(
        "e-1000",
        "-1.768610493014677074503175653270226520239677907588665494837677257575304640978808475274635707362464044253014370289948538552508877464736415873052958422861932774670165994201643419934807500290056179906392909880374230601661671965436663874506006355684166693059189687544326482526337453326360163639772818993753021740632937840115380957766425092940720439911920812397880443241274616212526380871555846532502156439892026352831619587768336768186345867565251889103622267866223055366872757385322485553606302984011695749730200727740242949661790906981449438923948817795927101980894917081591610562406554244675206099799522186446427884314773626993347929810277790888202019035845973880637832335294368222957931354735878969938534303074032237618397187328436715391758039680667871461788151793412286894565873237610467572174105629653438005433391873958639508124883860426968801537270756998560434335574379853659221182422319763412022530545421664765603500398209444536908432136868648907188939238968853841659746686717617541828417173199448336773447645561102873230388632254317334566170379314718589610910079079436175134148945650553411",
        "0.001266613503868717702066411192242601576193940560471409817185010171762524792588903616691501346028502452530417599269384116816237002586460261272462170615382790262110756215389780859682964779212455295242650488799024701023353984576434859496345393442867544784349509799966996827374525729583822627564832207860235000491856039278975203253540119195661182532106440194050352510825207428197675168479460252154208762204074041030502712772770772439567249008997886131809082319952112293668096363959700371035596685905429248221153089843201890985651976151989928496969024027810874574434857210174914227391125217932725188214796457327981771026544613194033736960542354861910879704489564999937473456191049937984461971508132204319961501958583967780282332682705656745932852354591955251196335374396883193221988201865629549575259395090238463522557833659758739138043696167112257784649600743807944457388512639475417466113111928274012056049434349358618953361438127758918999578120953045365596358997480091072548929426951083179599722132179281125708039705266879359303320165515458347343055671220673027817611220892213570374041225632346",
        "1e-1000", 450000, 1
    );
}
